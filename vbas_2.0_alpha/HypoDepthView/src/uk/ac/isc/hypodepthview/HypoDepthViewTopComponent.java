/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.ac.isc.hypodepthview;

import java.awt.BorderLayout;
import javax.swing.JScrollPane;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.WindowManager;
import uk.ac.isc.seisdata.Global;
import uk.ac.isc.seisdata.Hypocentre;
import uk.ac.isc.seisdata.HypocentresList;
import uk.ac.isc.seisdata.SeisDataChangeEvent;
import uk.ac.isc.seisdata.SeisDataChangeListener;
import uk.ac.isc.seisdata.SeisEvent;


/*
 * Top component which displays hypocentre depth panel.
 */
@ConvertAsProperties(
        dtd = "-//uk.ac.isc.hypodepthview//HypoDepthView//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "HypoDepthViewTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "depthview", openAtStartup = false)
@ActionID(category = "Window", id = "uk.ac.isc.hypodepthview.HypoDepthViewTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_HypoDepthViewAction",
        preferredID = "HypoDepthViewTopComponent"
)
@Messages({
    "CTL_HypoDepthViewAction=HypoDepthView",
    "CTL_HypoDepthViewTopComponent=HypoDepthView Window",
    "HINT_HypoDepthViewTopComponent=This is a HypoDepthView window"
})
public final class HypoDepthViewTopComponent extends TopComponent implements SeisDataChangeListener {

    private final HypocentresList hyposList = Global.getHypocentresList();
    private static final SeisEvent selectedSeisEvent = Global.getSelectedSeisEvent();       // to receive events
    private static final Hypocentre selectedHypocentre = Global.getSelectedHypocentre();    // to receive events

    private final JScrollPane scrollPane;

    // Get control window to retrieve data
    private final TopComponent tc = WindowManager.getDefault().findTopComponent("EventsControlViewTopComponent");

    // The panel to show depth of hypocentres
    HypoDepthViewPanel hdp = null;

    public HypoDepthViewTopComponent() {
        initComponents();
        setName(Bundle.CTL_HypoDepthViewTopComponent());
        setToolTipText(Bundle.HINT_HypoDepthViewTopComponent());
        Global.logDebug("Loaded...");

        selectedSeisEvent.addChangeListener(this);
        selectedHypocentre.addChangeListener(this);

        hdp = new HypoDepthViewPanel(hyposList.getHypocentres());
        scrollPane = new JScrollPane(hdp);

        this.setLayout(new BorderLayout());
        this.add(scrollPane, BorderLayout.CENTER);
    }

    //repaint the view when data changes
    @Override
    public void SeisDataChanged(SeisDataChangeEvent event) {

        String eventName = event.getData().getClass().getName();
        Global.logDebug(" Event received from " + eventName);

        // TODO: Probably don't need to redraw everything.
        switch (eventName) {
            case ("uk.ac.isc.seisdata.SeisEvent"):
                //SeisEvent seisEvent = (SeisEvent) event.getData();
                Global.logDebug("SeisEvent= " + selectedSeisEvent.getEvid());
                break;

            case ("uk.ac.isc.seisdata.Hypocentre"):
                //Hypocentre hypocentre = (Hypocentre) event.getData();
                Global.logDebug("Hypocentre= " + selectedHypocentre.getHypid());
                break;
        }

        hdp.UpdateData(hyposList.getHypocentres());
        hdp.getJFreeChart().fireChartChanged();
        hdp.repaint();
        scrollPane.setViewportView(hdp);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 811, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    // Variables declaration - do not modify                     
    // End of variables declaration                   
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        //hyposList.addChangeListener(this);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        //hyposList.removeChangeListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
